
buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://repo.jenkins-ci.org/public' }
        mavenCentral()
    }
    dependencies {
        classpath 'com.netflix.nebula.maven-publish:com.netflix.nebula.maven-publish.gradle.plugin:17.3.3'
        classpath 'com.netflix.nebula:nebula-release-plugin:19.0.10'
        //classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

plugins {
  id("com.netflix.nebula.release") version "19.0.10"
  id("com.netflix.nebula.maven-publish") version "17.3.3"
}

ext {
    versions = [:]
}

versions.jenkins = '2.121'
versions.jobDsl = '1.76'
versions.groovy = '2.4.11'
versions.spock = '1.1-groovy-2.4'

subprojects {
    plugins {
      id("groovy")
      id("com.netflix.nebula.maven-publish") version "17.3.3"
      id("nebula.javadoc-jar")
      id("nebula.source-jar")
    }
    //apply plugin: 'groovy'
    //apply plugin: 'nebula.maven-nebula-publish'
    //apply plugin: 'nebula.javadoc-jar'
    //apply plugin: 'nebula.source-jar'
    //apply from: "${rootDir}/gradle/bintrayUpload.gradle"

    repositories {
        maven { url 'https://repo.jenkins-ci.org/public' }
        mavenCentral()
    }

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

//tasks.release.finalizedBy subprojects.collect { it.tasks.bintrayUpload }
//tasks.release.finalizedBy ':jenkins-job-dsl-test-support:bintrayUpload', ':jenkins-job-dsl-gradle-plugin:publishPlugins'

tasks.release.dependsOn subprojects.collect { it.tasks.check }

if (ext.has('release.stage') && ext.get('release.stage') in ['dev', 'SNAPSHOT']) {
    rootProject.tasks.postRelease.dependsOn subprojects.collect { it.tasks.publishToMavenLocal }
}

